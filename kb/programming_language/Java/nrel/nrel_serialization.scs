

sc_node_norole_relation->nrel_serialization;;




nrel_serialization=> nrel_main_idtf: [сериализация*](* <- lang_ru;; *);;
nrel_serialization=> nrel_main_idtf: [serialization*](* <- lang_en;; *);;
definition ->...
(*
->rrel_key_sc_element: nrel_serialization;;
<= nrel_sc_text_translation: ...(*->rrel_example:[Сериализация (в программировании) — процесс перевода какой-либо структуры данных в последовательность  <b><sc_element sys_idtf="concept_bits">битов</b></sc_element>.](*
<-lang_ru;;
=>nrel_format:format_html;;*);;
=> nrel_main_idtf: [Определение (jar файл)](*<- lang_ru;;*);;
=> nrel_using_constants: 
{
	nrel_reference;
   concept_object

  

};;
*);;

statement ->...
(*
->rrel_key_sc_element: nrel_serialization;;
<= nrel_sc_text_translation: ...(*->rrel_example:[Сериализация используется для передачи объектов по сети и для сохранения их в файлы. ](*<-lang_ru;;*);;*);;
=> nrel_main_idtf: [Утверждение(jar файл)](*<- lang_ru;;
=>nrel_format:format_html;;*);;
=> nrel_using_constants: 
{
   concept_variable;
   concept_constructor

};;
*);;

sc_node_not_relation->arity;;
sc_node_not_relation->..arity_2;;

..arity_2=>nrel_measurement:2;;
..arity_2->nrel_serialization;;
..arity_2<-arity;;
number->2;;

nrel_serialization => nrel_first_domain: concept_object;;
nrel_serialization => nrel_second_domain: file;;
..union<=nrel_combination:
{
file;
concept_object
};;
nrel_serialization => nrel_definitional_domain: ..union;; 

relation => nrel_inclusion: oriented_relation;; 
relation => nrel_inclusion: binary_relation;;
oriented_relation -> nrel_serialization;;
binary_relation => nrel_inclusion: reflexive_relation;;
binary_relation => nrel_inclusion: antitransitive_relation;;
binary_relation => nrel_inclusion: antisymmetric_relation;; 
reflexive_relation -|> nrel_serialization;; 
antitransitive_relation -> nrel_serialization;;
antisymmetric_relation -> nrel_serialization;;





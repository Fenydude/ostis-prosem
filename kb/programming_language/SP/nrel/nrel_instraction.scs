

sc_node_norole_relation->nrel_instraction;;




nrel_instraction=> nrel_main_idtf: [инструкция*](* <- lang_ru;; *);;
nrel_instraction=> nrel_main_idtf: [instraction*](* <- lang_en;; *);;
definition ->...
(*
->rrel_key_sc_element: nrel_instraction;;
<= nrel_sc_text_translation: ...(*->rrel_example:[В информатике термин инструкция обозначает одну отдельную операцию процессора, определённую системой команд.](*
<-lang_ru;;
=>nrel_format:format_html;;*);;
=> nrel_main_idtf: [Определение (jar файл)](*<- lang_ru;;*);;
=> nrel_using_constants: 
{
	concept_data_sience

  

};;
*);;

statement ->...
(*
->rrel_key_sc_element: nrel_instraction;;
<= nrel_sc_text_translation: ...(*->rrel_example:[«Инструкцией» может быть любое представление элемента исполнимой программы, такой как байт-код.](*<-lang_ru;;*);;*);;
=> nrel_main_idtf: [Утверждение(jar файл)](*<- lang_ru;;
=>nrel_format:format_html;;*);;
=> nrel_using_constants: 
{
  

};;
*);;

sc_node_not_relation->arity;;
sc_node_not_relation->..arity_2;;

..arity_2=>nrel_measurement:2;;
..arity_2->nrel_instraction;;
..arity_2<-arity;;
number->2;;

nrel_instraction => nrel_first_domain: concept_code_block;;
nrel_instraction => nrel_second_domain: program;;
..union<=nrel_combination:
{
program;
concept_code_block
};;
nrel_instraction => nrel_definitional_domain: ..union;; 

relation => nrel_inclusion: oriented_relation;; 
relation => nrel_inclusion: binary_relation;;
oriented_relation -> nrel_instraction;;
binary_relation => nrel_inclusion: reflexive_relation;;
binary_relation => nrel_inclusion: antitransitive_relation;;
binary_relation => nrel_inclusion: antisymmetric_relation;; 
reflexive_relation -|> nrel_instraction;; 
antitransitive_relation -> nrel_instraction;;
antisymmetric_relation -> nrel_instraction;;



